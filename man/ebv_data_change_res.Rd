% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ebv_data_change_res.R
\name{ebv_data_change_res}
\alias{ebv_data_change_res}
\title{Change the resolution of the data of an EBV NetCDF}
\usage{
ebv_data_change_res(
  filepath_src,
  datacubepath_src,
  resolution,
  outputpath,
  timestep = 1,
  method = "average",
  return.raster = FALSE,
  overwrite = FALSE,
  ignore.RAM = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{filepath_src}{Character. Path to the NetCDF file whose resolution
should be changed.}

\item{datacubepath_src}{Character. Path to the datacube (use
\code{\link[=ebv_datacubepaths]{ebv_datacubepaths()}}) whose resolution should be changed..}

\item{resolution}{Either the path to an EBV NetCDF file that determines the
resolution (character) or the resolution defined directly (numeric). The
vector defining the resolution directly must contain three elements: the
x-resolution, the y-resolution and the corresponding epsg.}

\item{outputpath}{Character. Set path to write data as GeoTiff on disk.}

\item{timestep}{Integer. Choose one or several timesteps (vector).}

\item{method}{Character. Default: Average. Define resampling method. Choose
from:
"near","bilinear","cubic","cubicspline","lanczos","average","mode","max","min","med","q1"
and "q3". For detailed information see:
\href{https://gdal.org/programs/gdalwarp.html}{gdalwarp}.}

\item{return.raster}{Logical. Default: FALSE. Set to TRUE to directly get the
corresponding raster object.}

\item{overwrite}{Logical. Default: FALSE. Set to TRUE to overwrite the
outputfile defined by 'outputpath'.}

\item{ignore.RAM}{Logical. Default: FALSE. Checks if there is enough space in
your memory to read the data. Can be switched off (set to TRUE).}

\item{verbose}{Logical. Default: FALSE. Turn on all warnings by setting it to
TRUE.}
}
\value{
Default: returns the outputpath of the GeoTiff with the new
resolution. Optional: return the raster object with the new resolution.
}
\description{
Change the resolution of one datacube of a EBV NetCDF based on
another EBV NetCDF or a given resolution. This functions writes temporary
files on your disk. Specify a directory for these setting via
options('temp_directory'='/path/to/temp/directory').
}
\examples{
#define temp directory
options('temp_directory'=system.file("extdata/", package="ebvnetcdf"))
file <- system.file(file.path("extdata","cSAR_idiv_v1.nc"), package="ebvnetcdf")
datacubes <- ebv_datacubepaths(file)
res1 <- system.file(file.path("extdata","rodinini_001.nc"), package="ebvnetcdf")
res2 <- c(1,1,4326)
out <- file.path(system.file(package='ebvnetcdf'),"extdata","changeRes.tif")
#ebv_data_change_res(file, datacubes[1,1], res1,  out, c(1,6))
#d <- ebv_data_change_res(file, datacubes[1,1], res2, NULL, 3, method='max', return.raster=TRUE)
}
