% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ebv_data_change_res.R
\name{ebv_data_change_res}
\alias{ebv_data_change_res}
\title{Change the resoultion of the data from EBV NetCDF}
\usage{
ebv_data_change_res(
  filepath_src,
  datacubepath_src,
  resolution,
  outputpath,
  timestep = 1,
  method = "average",
  return.raster = FALSE,
  overwrite = FALSE,
  ignore.RAM = FALSE
)
}
\arguments{
\item{filepath_src}{Path to the NetCDF file whose resolution should be changed.}

\item{datacubepath_src}{Path to the datacube (use \code{\link[=ebv_datacubepaths]{ebv_datacubepaths()}}) whose resolution should be changed..}

\item{resolution}{Either the path to a NetCDF file that determines the resolution or the resultion defined directly. The vector defining the resolution directly must contain three elements: the x-resoltion, the y-resolution and the corresponding epsg.}

\item{outputpath}{Set path to write subset as GeoTiff on disk.}

\item{timestep}{Choose one or several timesteps (vector).}

\item{method}{Resampling method, default: Average. Choose from: "near","bilinear","cubic","cubicspline","lanczos","average","mode","max","min","med","q1" and "q3". For detailed information see: \href{https://gdal.org/programs/gdalwarp.html}{gdalwarp}.}

\item{return.raster}{Default: FALSE. Set to TRUE to directly get the corresponting raster object.}

\item{overwrite}{Default: FALSE. Set to TRUE to overwrite the outputfile defined by 'outputpath'.}

\item{ignore.RAM}{Checks if there is enough space in your memory to read the data. Can be switched off (set to TRUE).}
}
\value{
Default: returns the outputpath of the GeoTiff with the new resolution. Optional: return the raster object with the new resolution.
}
\description{
Change the resolution of the data of one datacube of a EBV NetCDF based on another EBV NetCDF or a given resolution. This functions writes temporary files on your disk. Speficy a directory for these setting via options('temp_directory'='/path/to/temp/directory').
}
\examples{
file <- paste0(path.package("ebvnetcdf"),"/extdata/cSAR_idiv_v1.nc")
datacubes <- ebv_datacubepaths(file)
res1 <- 'path/to/NetCDF/with/different/resolution.nc'
res2 <- c(1,1,4326)
out <- 'path/to/save/tif/with/new/res.tif'
# ebv_data_change_res(file, datacubes[1,1], res1,  out, c(1,6))
# data <- ebv_data_change_res(file, datacubes[1,1], res2,  out, 3, method='max', return.raster=T, overwrite=T)
}
