% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ebv_data_read_shp.R
\name{ebv_data_read_shp}
\alias{ebv_data_read_shp}
\title{Read subset (shapefile) of one datacube of an EBV NetCDF}
\usage{
ebv_data_read_shp(
  filepath,
  datacubepath,
  shp,
  outputpath = NULL,
  timestep = 1,
  at = TRUE,
  overwrite = FALSE,
  ignore.RAM = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{filepath}{Character. Path to the NetCDF file.}

\item{datacubepath}{Character. Path to the datacube (use
\code{\link[=ebv_datacubepaths]{ebv_datacubepaths()}}).}

\item{shp}{Character. Path to the shapefile defining the subset.}

\item{outputpath}{Character. Default: NULL, returns the data as a raster
object in memory. Optional: set path to write subset as GeoTiff on disk.}

\item{timestep}{Integer. Choose one or several timesteps (vector).}

\item{at}{Logical. Default: TRUE, all pixels touched by the polygon(s) will
be updated. Set to FALSE to only include pixels that are on the line render
path or have center points inside the polygon(s).}

\item{overwrite}{Logical. Default: FALSE. Set to TRUE to overwrite the
outputfile defined by 'outputpath'.}

\item{ignore.RAM}{Logical. Default: FALSE. Checks if there is enough space in
your memory to read the data. Can be switched off (set to TRUE).}

\item{verbose}{Logical. Default: FALSE. Turn on all warnings by setting it to
TRUE.}
}
\value{
Returns a raster object if no outputpath is given. Otherwise the
subset is written onto the disk and the ouputpath is returned.
}
\description{
Read a subset of one or more layers from one datacube of the
NetCDF file. Subset definition by a shapefile. This functions writes
temporary files on your disk. Specify a directory for these setting via
options('temp_directory'='/path/to/temp/directory').
}
\examples{
#define temp directory
options('temp_directory'=system.file("extdata/", package="ebvnetcdf"))
file <- system.file(file.path("extdata","cSAR_idiv_v1.nc"), package="ebvnetcdf")
datacubes <- ebv_datacubepaths(file)
shp <- system.file(file.path("extdata","subset_germany.shp"), package="ebvnetcdf")
#cSAR.germany <- ebv_data_read_bb(file, datacubes[1], shp)
}
\seealso{
\code{\link[=ebv_data_read_bb]{ebv_data_read_bb()}} for subsetting via bounding box.
}
